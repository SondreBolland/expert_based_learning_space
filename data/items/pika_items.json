{
    "Expressions": {
        "None": {
            "id": "Ex-None",
            "tasks": [
                {
                    "id": "Ex01",
                    "text": "What does this program print?",
                    "code": "a = 12\nresult = a + a\n\nprint(result)",
                    "solution": "24"
                },
                {
                    "id": "Ex02",
                    "text": "What does this program print?",
                    "code": "n = 0\nn = n + 1\nn = n + 1\n\nprint(n)",
                    "solution": "2"
                },
                {
                    "id": "Ex03",
                    "text": "What does this program print?",
                    "code": "a = 6\nb = 8\nc = a + b\nd = c + a\n\nprint(d)",
                    "solution": "20"
                },
                {
                    "id": "Ex04",
                    "text": "What does this program print?",
                    "code": "n = '1'\nn = n + '1'\nn = n + '1'\n\nprint(n)",
                    "solution": "111"
                }
            ]
        }
    },
    "Variables": {
        "None": {
            "id": "Var",
            "tasks": [
                {
                    "id": "Va01",
                    "text": "What is the value of variable a after line 4 has run?\nWhat is the value of variable b after line 4 has run?",
                    "code": "a = 10\nb = 20\n\na = b",
                    "solution": "a = 20, b = 20"
                },
                {
                    "id": "Va02",
                    "text": "What is the value of variable a after line 4 has run?\nWhat is the value of variable b after line 4 has run?",
                    "code": "a = 10\nb = 20\n\nb = a",
                    "solution": "a = 10, b = 10"
                },
                {
                    "id": "Va03",
                    "text": "What is the value of variable a after line 4 has run?\nWhat is the value of variable b after line 4 has run?",
                    "code": "a = 10\nb = 20\n\na = b\nb = a",
                    "solution": "a = 20, b = 20"
                },
                {
                    "id": "Va04",
                    "text": "What is the value of variable a after line 5 has run?\nWhat is the value of variable b after line 5 has run?\nWhat is the value of variable c after line 5 has run?",
                    "code": "a = 10\nb = 20\nc = 30\n\na = b\nb = c",
                    "solution": "a = 20, b = 30, c = 30"
                },
                {
                    "id": "Va05",
                    "text": "What is the value of variable a after line 6 has run?\nWhat is the value of variable b after line 6 has run?\nWhat is the value of variable c after line 6 has run?",
                    "code": "a = 10\nb = 20\nc = 30\n\na = c\nb = a\nc = b",
                    "solution": "a = 30, b = 30, c = 30"
                }
            ]
        }
    },
    "Booleans": {
        "None": {
            "id": "Bool",
            "tasks": [
                {
                    "id": "Bo01",
                    "text": "For each of the following expressions, choose which boolean value (True/False) it evaluates to.",
                    "code": "2 > 7\n(10*2) < 9\n(10 + 3) >= 13\n(10 * 2) < 9"
                },
                {
                    "id": "Bo02",
                    "text": "For each of the following expressions, choose which boolean value (True/False) it evaluates to.",
                    "code": "(3 < 7) and (7 < 9)\n(3 < 7) or (7 < 9)\nTrue or False\nTrue or True\nnot (True != True)"
                },
                {
                    "id": "Bo03",
                    "text": "Assume that a, b and c are variables of type int. Consider the following three expressions. Which of the expressions above is (are) always true if at least two of a, b and c are equal?",
                    "code": "I.   (a == b) and (a == c) and (b == c)\nII.  (a == b) or (a == c) or (b == c)\nIII. ((a - b) * (a - c) * (b - c)) == 0",
                    "options": [
                        "I only",
                        "II only",
                        "III only",
                        "I and II",
                        "II and III",
                        "I don't know"
                    ],
                    "solution": "II and III"
                }
            ]
        }
    },
    "Lists": {
        "None": {
            "id": "Li",
            "tasks": [
                {
                    "id": "Li01",
                    "text": "What does this program print?",
                    "code": "a = [10, 20, 30]\nprint(a[1])",
                    "solution": "20"
                },
                {
                    "id": "Li02",
                    "text": "What does this program print?",
                    "code": "a = [2, 4, 7, 9]\n\nprint(len(a))",
                    "solution": "4"
                },
                {
                    "id": "Li03",
                    "text": "What is the value of variable a when it is printed on line 6? What is the value of variable b when it is printed on line 7?",
                    "code": "ls = range(5)\n\na = ls[4]\nb = ls[1]\n\nprint(a)\nprint(b)",
                    "solution": "1 4"
                },
                {
                    "id": "Li04",
                    "text": "What does this program print?",
                    "code": "a = [10, 20, 30]\na[1] = a[1] + 5\n\nprint(a[1])",
                    "solution": "25"
                },
                {
                    "id": "Li05",
                    "text": "Which values does list a have after line 4?",
                    "code": "a = [10, 20, 30]\nb = [5, 15, 25]\n\nb[1] = a[1] + b[1]",
                    "solution": "a: [10, 20, 30], b: [5, 35, 25]"
                },
                {
                    "id": "Li06",
                    "text": "Which values do list a and b have after line 12?",
                    "code": "a = [5, 15, 25, 35, 45] \nb = [10, 20, 30, 40, 50] \n\ni = len(a) - 1 \n\nb[4] = a[0] \na[i] = a[3] \na[0] = a[2] - 5 \na[i - 2] = a[i - 1] \na[3] = a[i] / b[4] \nb[1] = a[1] \nb[0] = a[3] + 5",
                    "solution": "a: [20, 15, 35, 7, 35], b: [12, 15, 30, 40, 5]"
                }
            ]
        }
    },
    "Conditionals": {
        "None": {
            "id": "Con",
            "tasks": [
                {
                    "id": "Cond01",
                    "text": "What does this program print?",
                    "code": "if 2 > 7:\n    print(1)",
                    "options": [
                        "Nothing",
                        "1",
                        "I don't know"
                    ],
                    "solution": "Nothing"
                },
                {
                    "id": "Cond02",
                    "text": "What does this program print?",
                    "code": "if (10*2) < 9:\n    print(1)\nelif 100 == 100:\n    print(2)\nelse:\n    print(3)",
                    "options": [
                        "1",
                        "2",
                        "3",
                        "12",
                        "13",
                        "23",
                        "123",
                        "I don't know"
                    ],
                    "solution": "2"
                },
                {
                    "id": "Cond03",
                    "text": "What does this program print?",
                    "code": "a = 5\nb = 3\nc = 9\n\nif (a < b) and (a < c):\n    num = b + c\nelif (b < a) and (b < c):\n    num = a + c\nelse:\n    num = a + b\n\nprint(num)",
                    "solution": "14"
                },
                {
                    "id": "Cond01",
                    "text": "What does this program print?",
                    "code": "x = False\ny = True\nz = False\n\n\nif MISSING_CODE1:\n    print('Go you!')\nelse:\n    print('You rock!')\n\n\nif MISSING_CODE2:\n    print('Go you!')\nelse:\n    print('You rock!')",
                    "options": [
                        "MISSING_CODE1: (x and z) and (y or (not z)); MISSING_CODE2: not (x and z) or not (y or z)",
                        "MISSING_CODE1: (x and z) or (z and y) or y; MISSING_CODE2: x or (z and y)",
                        "MISSING_CODE1: (x and z) or (y and (not z)); MISSING_CODE2: x or y or z",
                        "MISSING_CODE1: not (not ((y or x) and (y or z))); MISSING_CODE2: not (x and z or y)",
                        "MISSING_CODE1: not (((x and z) or y) or y); MISSING_CODE2: x and y and Z",
                        "I don't know"
                    ],
                    "solution": "MISSING_CODE1: (x and z) and (y or (not z)); MISSING_CODE2: not (x and z) or not (y or z)"
                }
            ]
        }
    },
    "Loops": {
        "None": {
            "id": "Loop",
            "tasks": [
                {
                    "id": "Loop01",
                    "text": "What does this program print?",
                    "code": "n = 0\nwhile n < 10:\n    n = n + 1\n\nprint(n)",
                    "solution": "10"
                },
                {
                    "id": "Loop02",
                    "text": "What does this program print?",
                    "code": "n = 100\nwhile n < 10:\n    n = n + 2\n\nprint(n)",
                    "solution": "100"
                },
                {
                    "id": "Loop04",
                    "text": "What is the value of variable i when it is printed on line 10?\nWhat is the value of variable odd when it is printed on line 11?",
                    "code": "ls = [3, 6, 8, 1, 2, 0, 7, 2, 9]\ni = 0\nodd = 0\n\nwhile i < len(ls) and ls[i] != 0:\n    if (ls[i] % 2) == 1:\n        odd = odd + 1\n    i = i + 1\n\nprint(i)\nprint(odd)",
                    "options": [
                        "3 1",
                        "3 2",
                        "4 2",
                        "5 2",
                        "I don't know"
                    ],
                    "solution": "5 2"
                },
                {
                    "id": "Loop06",
                    "text": "What does this program print?",
                    "code": "n = 0\nls = [1, 1, 3]\nfor e in ls:\n    n = n + 1\n\nprint(n)",
                    "solution": "5"
                },
                {
                    "id": "Loop07",
                    "text": "What does this program print?",
                    "code": "for i in range(3):\n    print(1)\nprint(2)",
                    "options": [
                        "NOTE: Spaces are supposed to be line breakes for these answers",
                        "1 1 1 2",
                        "1 2 1 2 1 2",
                        "1 1 1",
                        "1 2",
                        "1 1 2",
                        "I don't know"
                    ],
                    "solution": "1\n1\n1\n2"
                },
                {
                    "id": "Loop08",
                    "text": "What does this program print?",
                    "code": "n = 0\nls = [-1, 4, -3, 0, -10, 5]\nfor e in ls:\n    if e > 0:\n        n = n + e\n\nprint(n)",
                    "solution": "9"
                },
                {
                    "id": "Loop01",
                    "text": "Which of the following statements best describes the execution of the while loop?",
                    "code": "i = 1\nj = 0\nwhile j < 10:\n    print('Book', i)\n    i = i + 1",
                    "options": [
                        "When j is less than 10, print 'Book i', e.g., Book 1, Book 2, ..., Book 9",
                        "When j is less than 10, print 'Book j', e.g., Book 0, Book 1, ..., Book 9",
                        "j is always equal to 0, which is less than 10; so print 'Book 0' an infinite number of times",
                        "j is always equal to 0, which is less than 10; so print 'Book i' an infinite number of times",
                        "j is equal to 0, which is less than 10; so print Book 1",
                        "I don't know"
                    ],
                    "solution": "j is always equal to 0, which is less than 10; so print 'Book i' an infinite number of times"
                },
                {
                    "id": "Loop02",
                    "text": "Which solution to a problem is not best suited for a for-loop?",
                    "code": "",
                    "options": [
                        "A solution that needs to print all the values in a list at the end.",
                        "A solution that needs to repeat a known number of times.",
                        "A solution that involves counting a range of numbers.",
                        "A solution that involves performing the same operation to different objects in a list.",
                        "A solution that requires looping until a certain condition is met.",
                        "I don't know"
                    ],
                    "solution": "A solution that requires looping until a certain condition is met."
                }
            ]
        }
    },
    "Functions": {
        "None": {
            "id": "Func",
            "tasks": [
                {
                    "id": "Fn01",
                    "text": "Which of the following statements best describes the execution of the function call add(8, 5, 12)?",
                    "code": "def add(a, b, c):\n    num = 0\n    if (a < b) and (a < c):\n        num = b + c\n        return num\n    elif (b < a) and (b < c):\n        num = a + c\n        return num\n    else:\n        num = a + b\n        return num\n    print(num)",
                    "options": [
                        "Value of num = 13",
                        "After printing the num product, add will return the num",
                        "Nothing will ever be printed from this function",
                        "An error will be generated for attempting to print after returning num",
                        "I don't know"
                    ],
                    "solution": "Nothing will ever be printed from this function"
                },
                {
                    "id": "Fn02",
                    "text": "What is the value of a when it is printed on line 8?\nWhat is the value of b when it is printed on line 9?",
                    "code": "def f(x):\n    return 2 * x\n\nx = 5\na = f(x)\nb = f(x)\n\nprint(a)\nprint(b)",
                    "solution": "10 10"
                },
                {
                    "id": "Fn03a",
                    "text": "What does this program print?",
                    "code": "def f(x):\n    x = x + 2\n    return x - 1\n\ndef g(x):\n    x = f(x) + 3\n    return x\n\nprint(f(6))",
                    "solution": "7"
                },
                {
                    "id": "Fn03b",
                    "text": "What does this program print?",
                    "code": "def f(x):\n    x = x + 2\n    return x - 1\n\ndef g(x):\n    x = f(x) + 3\n    return x\n\nprint(f(2) + f(3))",
                    "solution": "13"
                },
                {
                    "id": "Fn03c",
                    "text": "What does this program print?",
                    "code": "def f(x):\n    x = x + 2\n    return x - 1\n\ndef g(x):\n    x = f(x) + 3\n    return x\n\nprint(g(3))",
                    "solution": "11"
                },
                {
                    "id": "Fn03d",
                    "text": "What does this program print?",
                    "code": "def f(x):\n    x = x + 2\n    return x - 1\n\ndef g(x):\n    x = f(x) + 3\n    return x\n\nprint(f(g(5)))",
                    "solution": "13"
                }
            ],
            "Model": [
                {
                    "id": "Fn01",
                    "text": "Which of the following can be used to replace # Missing code so that between will work as intended?",
                    "code": "def between(x, lower, upper):\n    # Missing code",
                    "options": [
                        "return (x <= lower) and (x >= upper)",
                        "return (x <= lower) or (x >= upper)",
                        "return (lower <= x <= upper)",
                        "return (x >= lower) and (x <= upper)",
                        "return (x >= lower) or (x <= upper)",
                        "I don't know"
                    ],
                    "solution": "return (lower <= x <= upper)"
                },
                {
                    "id": "Fn02",
                    "text": "Which of the following can be used to replace the body of the function calculate so that the modified version will return the same result as the original version for all x?",
                    "code": "def calculate(x):\n    x = x + x\n    x = x + x\n    x = x + x\n    return x",
                    "options": [
                        "return 3 + x",
                        "return 3 * x",
                        "return 4 + x",
                        "return 4 * x",
                        "return 8 * x",
                        "I don't know"
                    ],
                    "solution": "return 8 * x"
                }
            ]
        }
    }
}